# -*- coding: utf-8 -*-
"""LogsFS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wIO8T_kLGRESefzvggd9-YHyJ00NkjmR

#Bibliotecas
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

"""#Abrindo Arquivo"""

arquivo = 'drive/MyDrive/log.csv'
df = pd.read_csv(arquivo)
df

"""# Média, Desvio Padrão e Variância dos testes"""

teste_seq = df['Seq_Heu_FS']
teste_par = df['Par_Heu_FS']
teste_fs_seq = df['Seq_FS']
teste_fs_par = df['Par_FS']
tam_seq_heu = len(df['Seq_Heu_FS'])
tam_par_heu = len(df['Par_Heu_FS'])
tam_seq_fs = len(df['Seq_FS'])
tam_par_fs = len(df['Par_FS'])
mteste_seq_heu = sum(teste_seq)/tam_seq_heu
mteste_par_heu = sum(teste_par)/tam_par_heu
mteste_fs_seq = sum(teste_fs_seq)/tam_seq_fs
mteste_fs_par = sum(teste_fs_par)/tam_par_fs
print("Média de tempo dos testes do Algoritmo Sequencial com Heurística %.2fs" %(mteste_seq_heu))
print("Média de tempo dos testes do Algoritmo Paralelo com Heurística %.2fs" %(mteste_par_heu))
print("Média de tempo dos testes do Algoritmo Sequencial por Força Bruta %.2fs" %(mteste_fs_par))
print("Média de tempo dos testes do Algoritmo Paralelo por Força Bruta %.2fs" %(mteste_fs_seq))
print("Desvio Padrão dos testes do Algoritmo Sequencial com Heurística %.2fs" %(np.std(teste_seq)))
print("Desvio Padrão dos testes do Algoritmo Paralelo com Heurística %.2fs" %(np.std(teste_par)))
print("Desvio Padrão dos testes do Algoritmo Sequencial por Força Bruta %.2fs" %(np.std(teste_fs_seq)))
print("Desvio Padrão dos testes do Algoritmo Paralelo por Força Bruta %.2fs" %(np.std(teste_fs_par)))
print("Variância dos testes do Algoritmo Sequencial com Heurística %.2fs" %(np.var(teste_seq)))
print("Variância dos testes do Algoritmo Paralelo com Heurística %.2fs" %(np.var(teste_par)))
print("Variância dos testes do Algoritmo Sequencial por Força Bruta %.2fs" %(np.var(teste_fs_seq)))
print("Variância dos testes do Algoritmo Paralelo por Força Bruta %.2fs" %(np.var(teste_fs_par)))

"""# Gráficos """

plt.figure(figsize=(12, 6))
plt.title("Tempo de execução dos algoritmos com heurística", fontdict = {"fontweight": "bold"})
plt.grid()
testes = ['1','2','3','4','5','6','7','8','9','10']
plt.xlabel("Nº de Testes")
plt.ylabel("Tempo em Segundos")
plt.plot(testes, teste_seq, label="Sequencial com Heurística", linestyle = "-", linewidth = 3)
plt.plot(testes, teste_par, label="Paralelo com Heurística", linestyle = "-", linewidth = 3)
plt.legend()
plt.show()

plt.figure(figsize=(12, 6))
plt.title("Tempo de execução dos algoritmos por força bruta", fontdict = {"fontweight": "bold"})
plt.grid()
plt.xlabel("Nº de Testes")
plt.ylabel("Tempo em Segundos")
plt.plot(testes, teste_fs_seq, label="Sequencial por Força Bruta", linestyle = "-", linewidth = 3)
plt.plot(testes, teste_fs_par, label="Paralelo por Força Bruta", linestyle = "-", linewidth = 3)
plt.legend()
plt.show()

plt.figure(figsize=(12, 6))
plt.title("Tempo de execução dos algoritmos", fontdict = {"fontweight": "bold"})
plt.grid()
plt.xlabel("Nº de Testes")
plt.ylabel("Tempo em Segundos")
plt.plot(testes, teste_seq, label="Sequencial com Heurística", linestyle = "-", linewidth = 3)
plt.plot(testes, teste_par, label="Paralelo com Heurística", linestyle = "-", linewidth = 3)
plt.plot(testes, teste_fs_seq, label="Sequencial por Força Bruta", linestyle = "-", linewidth = 3)
plt.plot(testes, teste_fs_par, label="Paralelo por Força Bruta", linestyle = "-", linewidth = 3)
plt.legend()
plt.show()